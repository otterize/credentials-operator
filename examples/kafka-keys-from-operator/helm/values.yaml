kafka:
  superUsers: "User:CN=kafka.default,C=US,O=SPIRE"
  livenessProbe:
    initialDelaySeconds: 20
  readinessProbe:
    initialDelaySeconds: 20
  listeners:
    - "CLIENT://:9092"
    - "INTERNAL://:9093"
    - "EXTERNAL://:9094"
  # CLIENT and EXTERNAL should be SSL so kafka will use the certificates
  listenerSecurityProtocolMap: "INTERNAL:SSL,CLIENT:SSL,EXTERNAL:SSL"
  auth:
    clientProtocol: mtls
    interBrokerProtocol: mtls
    tls:
      type: pem
      existingSecrets:
        - spifferize-tls-go-spiffe-tls-kafka
  authorizerClassName: kafka.security.authorizer.AclAuthorizer
  allowEveryoneIfNoAclFound: true
  podLabels:
    app: lab-kafka
  podAnnotations:
    otterize/service-name: kafka
    otterize/tls-secret-name: spifferize-tls-go-spiffe-tls-kafka
    otterize/bundle-file-name: ca.crt
    otterize/svid-file-name: tls.crt
    otterize/key-file-name: tls.key
    otterize/dns-names: "kafka-tls-0.kafka-tls-headless.default.svc.cluster.local,kafka-tls.default.svc.cluster.local"
  zookeeper:
    podLabels:
      app: lab-zookeeper
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
  extraVolumes:
    - name: kafka-secrets
      secret:
        secretName: spifferize-tls-go-spiffe-tls-kafka
  extraVolumeMounts:
    - mountPath: /certs2
      name: kafka-secrets

