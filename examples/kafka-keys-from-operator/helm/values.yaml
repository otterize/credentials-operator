kafka:
  superUsers: "User:CN=kafka.default,O=SPIRE,C=US;User:CN=intents-operator-controller-manager.intents-operator-system,O=SPIRE,C=US"
  livenessProbe:
    initialDelaySeconds: 20
  readinessProbe:
    initialDelaySeconds: 20
  listeners:
    - "CLIENT://:9092"
    - "INTERNAL://:9093"
    - "EXTERNAL://:9094"
    - "EXTERNAL_PLAIN://:9095"
  # CLIENT and EXTERNAL should be SSL so kafka will use the certificates
  advertisedListeners:
    - "CLIENT://:9092"
    - "INTERNAL://:9093"
    - "EXTERNAL://:9094"
    - "EXTERNAL_PLAIN://:9095"
  listenerSecurityProtocolMap: "INTERNAL:SSL,CLIENT:SSL,EXTERNAL:SSL,EXTERNAL_PLAIN:PLAINTEXT"
  auth:
    clientProtocol: mtls
    interBrokerProtocol: mtls
    tls:
      type: jks
      existingSecrets:
        - kafka-tls-secret
      password: password
  authorizerClassName: kafka.security.authorizer.AclAuthorizer
  allowEveryoneIfNoAclFound: false
  podLabels:
    app: lab-kafka
  podAnnotations:
    spire-integration.otterize.com/cert-type: jks
    spire-integration.otterize.com/cert-ttl: "999999999"
    spire-integration.otterize.com/service-name: kafka
    spire-integration.otterize.com/tls-secret-name: kafka-tls-secret
    spire-integration.otterize.com/truststore-file-name: kafka.truststore.jks
    spire-integration.otterize.com/keystore-file-name: kafka-keystore.jks
    spire-integration.otterize.com/jks-password: password
    spire-integration.otterize.com/dns-names: "kafka-tls-0.kafka-tls-headless.default.svc.cluster.local,kafka-tls.default.svc.cluster.local"
  zookeeper:
    podLabels:
      app: lab-zookeeper
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
