// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/otterize/credentials-operator/src/controllers (interfaces: ServiceAccountEnsurer)

// Package mockserviceaccounts is a generated GoMock package.
package mockserviceaccounts

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockServiceAccountEnsurer is a mock of ServiceAccountEnsurer interface.
type MockServiceAccountEnsurer struct {
	ctrl     *gomock.Controller
	recorder *MockServiceAccountEnsurerMockRecorder
}

// MockServiceAccountEnsurerMockRecorder is the mock recorder for MockServiceAccountEnsurer.
type MockServiceAccountEnsurerMockRecorder struct {
	mock *MockServiceAccountEnsurer
}

// NewMockServiceAccountEnsurer creates a new mock instance.
func NewMockServiceAccountEnsurer(ctrl *gomock.Controller) *MockServiceAccountEnsurer {
	mock := &MockServiceAccountEnsurer{ctrl: ctrl}
	mock.recorder = &MockServiceAccountEnsurerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceAccountEnsurer) EXPECT() *MockServiceAccountEnsurerMockRecorder {
	return m.recorder
}

// EnsureServiceAccount mocks base method.
func (m *MockServiceAccountEnsurer) EnsureServiceAccount(arg0 context.Context, arg1 *v1.Pod) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureServiceAccount", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureServiceAccount indicates an expected call of EnsureServiceAccount.
func (mr *MockServiceAccountEnsurerMockRecorder) EnsureServiceAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureServiceAccount", reflect.TypeOf((*MockServiceAccountEnsurer)(nil).EnsureServiceAccount), arg0, arg1)
}
