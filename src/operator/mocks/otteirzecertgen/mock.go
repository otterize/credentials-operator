// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/certificates/otterizecertgen/otterize_certificate_generator.go

// Package mock_otterizecertgen is a generated GoMock package.
package mock_otterizecertgen

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	otterizegraphql "github.com/otterize/spire-integration-operator/src/controllers/otterizeclient/otterizegraphql"
)

// MockOtterizeCloudClient is a mock of OtterizeCloudClient interface.
type MockOtterizeCloudClient struct {
	ctrl     *gomock.Controller
	recorder *MockOtterizeCloudClientMockRecorder
}

// MockOtterizeCloudClientMockRecorder is the mock recorder for MockOtterizeCloudClient.
type MockOtterizeCloudClientMockRecorder struct {
	mock *MockOtterizeCloudClient
}

// NewMockOtterizeCloudClient creates a new mock instance.
func NewMockOtterizeCloudClient(ctrl *gomock.Controller) *MockOtterizeCloudClient {
	mock := &MockOtterizeCloudClient{ctrl: ctrl}
	mock.recorder = &MockOtterizeCloudClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOtterizeCloudClient) EXPECT() *MockOtterizeCloudClientMockRecorder {
	return m.recorder
}

// GetTLSKeyPair mocks base method.
func (m *MockOtterizeCloudClient) GetTLSKeyPair(ctx context.Context, serviceId string) (otterizegraphql.TLSKeyPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTLSKeyPair", ctx, serviceId)
	ret0, _ := ret[0].(otterizegraphql.TLSKeyPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTLSKeyPair indicates an expected call of GetTLSKeyPair.
func (mr *MockOtterizeCloudClientMockRecorder) GetTLSKeyPair(ctx, serviceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTLSKeyPair", reflect.TypeOf((*MockOtterizeCloudClient)(nil).GetTLSKeyPair), ctx, serviceId)
}
